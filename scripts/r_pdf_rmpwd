#!/bin/bash
#  _______   _______
# |  _____| |  ___  |
# | |       | |   | |    Rolando Ramos Torres (@rolodoom)
# | |       | |___| |    http://rolandoramostorres.com
# |_|       |_______|
#  _         _______
# | |       |  ___  |
# | |       | |   | |
# | |_____  | |___| |    r_pdf_rmpwd
# |_______| |_______|    Remove password from all PDF files in a folder.
#
#
#

# Initialize variables with default values
password=
folder_path=$(pwd)

# Check if pdftk command is available
if ! command -v pdftk &> /dev/null; then
  echo "pdftk is not available. Please install it first."
  exit 1
fi

# Define Help function
Help() {
  cat <<EOF
Usage: $0 [-h] [-p PASSWORD] [-f FOLDER_PATH]

Remove password from all PDF files in a folder.

OPTIONS:
  -h                 Show this help message and exit.
  -p PASSWORD        Specify the password to use for all PDF files.
                     If not provided, the script will prompt for it.
  -f FOLDER_PATH     Specify the folder path where the PDF files are located.
                     If not provided, the current working directory will be used.
EOF
}


# Parse command line options
while [[ $# -gt 0 ]]; do
  case $1 in
    -h|--help)
      Help
      exit 0
      ;;
    -p|--password)
      password=$2
      shift
      ;;
    -f|--folder)
      folder_path=$2
      shift
      ;;
    *)
      break
      ;;
  esac
  shift
done


# check if folder contains any PDF files
if [ ! "$(find "$folder_path" -maxdepth 1 -type f -name '*.pdf' -print -quit)" ]; then
  echo -e "No PDF files found in $folder_path\n"
  Help
  exit 1
fi


# Prompt for password if not provided
if [[ -z "$password" ]]; then
  read -sp "Enter the password for the PDF files: " password
  echo
  if [[ -z "$password" || "$password" == $'\n' ]]; then
    echo "No password provided. Exiting..."
    exit 1
  fi
fi


# Loop through all PDF files in the folder and process each one
for file_path in "$folder_path"/*.pdf; do
  if [[ -f "$file_path" ]]; then
    # Extract filename without extension
    filename=$(basename "$file_path" .pdf)
    # Build output filename
    output_filename="${filename}--output.pdf"
    # Remove password from input file and save as output file
    pdftk "$file_path" input_pw "$password" output "$output_filename"
    echo "Password removed from $file_path and saved as $output_filename"
  fi
done
