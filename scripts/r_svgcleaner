#!/bin/bash
#  _______   _______
# |  _____| |  ___  |
# | |       | |   | |    Rolando Ramos Torres (@rolodoom)
# | |       | |___| |    http://rolandoramostorres.com
# |_|       |_______|
#  _         _______
# | |       |  ___  |
# | |       | |   | |    r_svgcleaner
# | |_____  | |___| |    SVG batch processing script with svgcleaner, tidy, and inkscape
# |_______| |_______|
#

# Check if required commands are available
command -v svgcleaner >/dev/null 2>&1 || { echo >&2 "I require svgcleaner but it's not installed. Aborting."; exit 1; }
command -v tidy >/dev/null 2>&1 || { echo >&2 "I require tidy but it's not installed. Aborting."; exit 1; }
command -v flatpak >/dev/null 2>&1 || { echo >&2 "I require flatpak but it's not installed. Aborting."; exit 1; }
flatpak list --app | grep -q 'org.inkscape.Inkscape' || { echo >&2 "I require Flatpak Inkscape but it's not installed. Aborting."; exit 1; }

# Define a function to display help information
Help() {
    cat << EOF
Usage: $(basename "$0") [OPTIONS] [FILE]

SVG batch processing script with svgcleaner, tidy, and inkscape

OPTIONS:
  -h     Display this help message
  -p     Generate PNG versions of the processed SVG files

ARGUMENTS:
  FILE   SVG file to process, or '.' to process all SVG files in the current directory

EXAMPLES:
  $(basename $0) .
    Process all SVG files in the current directory.

  $(basename $0) icon.svg
    Process the 'icon.svg' file in the current directory.

  $(basename $0) -p icon.svg
    Process the 'icon.svg' file in the current directory and generate a PNG version of the processed file.
EOF
}




# Define a function to process an SVG icon
function process_icon {
    ICON=$1
    #echo "process the icon ${ICON}"
    svgcleaner "$ICON" "$ICON"
    tidy -q -xml -indent -wrap 0 -m "$ICON"
    if [ $GENERATE_PNG -eq 1 ]
    then
        flatpak run org.inkscape.Inkscape --export-filename "${ICON%.*}.png" --export-area-page "$ICON"
    fi
}

GENERATE_PNG=0

# Use getopts to handle the '-h' and '-p' flags
while getopts "hp" option; do
    case $option in
        h)
            Help
            exit
            ;;
        p)
            GENERATE_PNG=1
            ;;
        \?)
            echo -e "Invalid option: -$OPTARG\n" >&2
            Help
            exit 1
            ;;
    esac
done

# Remove the processed arguments
shift $((OPTIND-1))


# Set nocaseglob to make file matching case-insensitive
shopt -s nocaseglob # Sets nocaseglob


# Check if the script is called without arguments
if [ $# -eq 0 ]
then
    Help
    exit 1
else
    file=$1
    case $file in
        # Process all SVG files in the current directory
        .)
            for icon in *.svg
            do
                process_icon $icon
            done
            exit;
            ;;
        # Process one specific SVG file
        *)
            # Check if the file exists and is a valid SVG file
            if [ -f $file ] && [ "${file: -4}" == ".svg" ]; then
                # Process the SVG file
                process_icon $file
            else
                echo "File \"${file}\" doesn't exist or is not a valid SVG file!"
                echo
                Help
                exit 1
            fi
            exit;
            ;;
    esac
fi