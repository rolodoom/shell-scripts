#!/bin/bash
#  _______   _______
# |  _____| |  ___  |
# | |       | |   | |    Rolando Ramos Torres (@rolodoom)
# | |       | |___| |    http://rolandoramostorres.com
# |_|       |_______|
#  _         _______
# | |       |  ___  |
# | |       | |   | |
# | |_____  | |___| |    r_img_rename
# |_______| |_______|    Adds a given string to the filenames of all image files
#
#
#

# Define function to display usage information.
Help() {
  cat <<-EOF
Usage: $0 -i PATH -s STRING [-p <prefix|suffix>] [-h]

This script adds a given string to the file names of all image files in a folder.
Supported image types are: 'jpg', 'jpeg', 'png', 'gif', and 'bmp'

OPTIONS:
  -h                  Display this help message
  -i PATH             The path to the folder containing the image files.
  -s STRING           The string to add to the filenames.
  -p <prefix|suffix>  The position at which to add the string. Must be 'prefix' or 'suffix'. Default is 'prefix'.

EXAMPLES:
  $(basename $0) -i . -s new_
   All image files in the current directory will be prefixed with the string "new_".
   For example, if there is an image file called image.jpg in the current directory, the script will rename it to new_image.jpg.

  $(basename $0) -i . -p suffix -s _new
   All image files in the current directory will be suffixed with the string "_new". 
   For example, if there is an image file called image.jpg in the current directory, the script will rename it to image_new.jpg.
EOF
}


# Set default values.
position="prefix"

# Parse command-line arguments.
while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    -i|--imagepath)
      imagepath="$2"
      shift 2
      ;;
    -s|--string)
      string="$2"
      shift 2
      ;;
    -p|--position)
      position="$2"
      shift 2
      ;;
    -h|--help)
      Help
      exit 1
      ;;
    *)
      Help
      exit 1
      ;;
  esac
done

# Check if required arguments were passed.
if [ -z "$imagepath" ] || [ -z "$string" ]; then
  echo -e "Error: Missing required argument(s).\n"
  Help
fi

# Loop through all image files in the folder.
for file in $imagepath/*.{jpg,jpeg,png,gif,bmp}; do
  # Check if the file is a regular file (not a directory).
  if [ -f "$file" ]; then
    # Get the file's current name and extension.
    filename=$(basename "$file")
    extension="${filename##*.}"

    # Add the string prefix or suffix the filename, depending on the position.
    if [ "$position" = "prefix" ]; then
      newname="${string}${filename}"
    elif [ "$position" = "suffix" ]; then
      newname="${filename%.*}${string}.${extension}"
    else
      echo "Error: Invalid 'position' argument. Must be 'prefix' or 'suffix'."
      exit 1
    fi

    # Rename the file.
    mv "$file" "$imagepath/$newname"
  fi
done
