#!/bin/bash
#  _______   _______
# |  _____| |  ___  |
# | |       | |   | |    Rolando Ramos Torres (@rolodoom)
# | |       | |___| |    http://rolandoramostorres.com
# |_|       |_______|
#  _         _______     
# | |       |  ___  |
# | |       | |   | |    r_cp_band
# | |_____  | |___| |    Syncs a Selected Artist ~/Music folder
# |_______| |_______|    on a server
# 
#

#   This script allows you to copy a band folder from a remote server to your 
#   local machine using rsync. The script takes the server address, band name, 
#   and optional rsync options as arguments. It supports both the default 
#   rsync options (-aAX) and allows you to enable verbose mode (-v) by passing 
#   the -v flag either before or after the server and band name.

# Define a function to display help information
Help() {
    cat << EOF
Usage: $(basename "$0") <Server> <Band Name> [rsync options]

Script to get a band folder from a remote server using rsync

OPTIONS:
  -h, --help      Show this help message
  -v              Enable verbose mode (passed either before or after the band name)
  --info=progress2 Show progress information during file transfer

ARGUMENTS:
  <Server>: The server address (e.g., user@myserver)
  <Band Name>: The band folder name (e.g., "The 69 Eyes")

EXAMPLES:
  $(basename $0) user@myserver.com "The 69 Eyes"
    Gets the folder "The 69 Eyes" from ~/Music on user@myserver.com using rsync.

  $(basename $0) -v user@myserver.com "The 69 Eyes"
    Same as above but passed verbose argument to rsync.
EOF
}

# If -h or --help is passed, show the usage
if [[ "$1" == "-h" || "$1" == "--help" ]]; then
  Help
  exit 0
fi

# Initialize variables
SERVER=""
BAND_NAME=""
RSYNC_OPTIONS="-aAX"  # Default rsync options

# Loop through arguments and capture server, band name, and rsync options
while [[ "$#" -gt 0 ]]; do
  case "$1" in
    -v) 
      RSYNC_OPTIONS="$RSYNC_OPTIONS -v"   # Add verbose mode to rsync options
      shift
      ;;
    --info=progress2)
      RSYNC_OPTIONS="$RSYNC_OPTIONS --info=progress2" # Enable progress info
      shift
      ;;
    -*)
      Help
      exit 1
      ;;
    *)
      if [ -z "$SERVER" ]; then
        SERVER="$1"
      elif [ -z "$BAND_NAME" ]; then
        BAND_NAME="$1"
      else
        Help
        exit 1
      fi
      shift
      ;;
  esac
done

# Ensure the server and band name are provided
if [ -z "$SERVER" ] || [ -z "$BAND_NAME" ]; then
  echo "Error: Server and Band Name are required."
  Help
  exit 1
fi

# Define the remote path with the band name
REMOTE_PATH="${SERVER}:~/Music/${BAND_NAME}/"

# Define the local path with $HOME expanding to the correct home directory
LOCAL_PATH="${HOME}/Music/${BAND_NAME}/"

# Use rsync with the appropriate options
rsync $RSYNC_OPTIONS --delete-after "$REMOTE_PATH" "$LOCAL_PATH"

# Check for rsync success
if [[ $? -eq 0 ]]; then
  echo "Successfully synced ${BAND_NAME} from ${SERVER}."
  exit 0
else
  echo "Error: rsync failed."
  exit 1
fi